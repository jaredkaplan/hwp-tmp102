<!--
  Copyright 2011-2014 Marvell Semiconductor, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<program xmlns="http://www.kinoma.com/kpr/1">

    <require id="TMP102" path="TMP102" />
    <require id="HardwarepinsModule" path="HardwarepinsModule" />

    <container id="MainContainer" top="0" left="0" bottom="0" right="0">
        <skin color="white"/>
        <label left="0" right="0" name="temperature" string="'- - -'">
           <style font="36px Arial bold" color="black"/>
           <behavior>
               <method id="handleTemperatureChanged" params="content, temp">
                   <![CDATA[
                      content.string = temp.celsius.toFixed( 1 ) + "°C" + " / " + temp.fahrenheit.toFixed( 1 ) + "°F";
                   ]]>
               </method>
           </behavior>
        </label>
    </container>

    <script>
        <![CDATA[
            // create a new temperature sensor object instance
            var tmp102 = new TMP102.TMP102( 27, 29 );

            // create the main container and add it to the application
            application.add( new MainContainer() );

            // initialize the sensor and start polling
            tmp102.init();
            tmp102.poll( 100, HardwarepinsModule.MILLISECONDS, "/tmp102/value" );
        ]]>
    </script>

    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- Handler that is called when the temperature state has changed -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <handler path="/tmp102/value">
       <behavior>
          <method id="onInvoke" params="content, message">
             <![CDATA[
                var data = message.requestObject;

                if( data != null )
                    application.distribute( "handleTemperatureChanged", data );
             ]]>
          </method>
       </behavior>
    </handler>

</program>
